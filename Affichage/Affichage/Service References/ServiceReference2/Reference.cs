//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Affichage.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert", ReplyAction="http://tempuri.org/IService1/InsertResponse")]
        string Insert(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert", ReplyAction="http://tempuri.org/IService1/InsertResponse")]
        System.Threading.Tasks.Task<string> InsertAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertXbee", ReplyAction="http://tempuri.org/IService1/InsertXbeeResponse")]
        string InsertXbee(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertXbee", ReplyAction="http://tempuri.org/IService1/InsertXbeeResponse")]
        System.Threading.Tasks.Task<string> InsertXbeeAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select", ReplyAction="http://tempuri.org/IService1/SelectResponse")]
        System.IO.Stream Select();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Select", ReplyAction="http://tempuri.org/IService1/SelectResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> SelectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAffichage", ReplyAction="http://tempuri.org/IService1/SelectAffichageResponse")]
        System.IO.Stream SelectAffichage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAffichage", ReplyAction="http://tempuri.org/IService1/SelectAffichageResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> SelectAffichageAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Affichage.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Affichage.ServiceReference2.IService1>, Affichage.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Insert(System.IO.Stream stream) {
            return base.Channel.Insert(stream);
        }
        
        public System.Threading.Tasks.Task<string> InsertAsync(System.IO.Stream stream) {
            return base.Channel.InsertAsync(stream);
        }
        
        public string InsertXbee(System.IO.Stream stream) {
            return base.Channel.InsertXbee(stream);
        }
        
        public System.Threading.Tasks.Task<string> InsertXbeeAsync(System.IO.Stream stream) {
            return base.Channel.InsertXbeeAsync(stream);
        }
        
        public System.IO.Stream Select() {
            return base.Channel.Select();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> SelectAsync() {
            return base.Channel.SelectAsync();
        }
        
        public System.IO.Stream SelectAffichage() {
            return base.Channel.SelectAffichage();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> SelectAffichageAsync() {
            return base.Channel.SelectAffichageAsync();
        }
    }
}
